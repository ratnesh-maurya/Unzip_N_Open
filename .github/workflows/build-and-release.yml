name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21.5

    - name: Build Linux amd64 Binary
      run: GOOS=linux GOARCH=amd64 go build -o rzip_linux_amd64

    - name: Build Linux arm64 Binary
      run: GOOS=linux GOARCH=arm64 go build -o rzip_linux_arm64

    - name: Build Windows amd64 Binary
      run: GOOS=windows GOARCH=amd64 go build -o rzip_windows_amd64.exe

    - name: Build Windows arm64 Binary
      run: GOOS=windows GOARCH=arm64 go build -o rzip_windows_arm64.exe

    - name: Build macOS amd64 Binary
      run: GOOS=darwin GOARCH=amd64 go build -o rzip_macos_amd64

    - name: Build macOS arm64 Binary
      run: GOOS=darwin GOARCH=arm64 go build -o rzip_macos_arm64

    - name: Archive binaries
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: |
          ./rzip_linux_amd64
          ./rzip_linux_arm64
          ./rzip_windows_amd64.exe
          ./rzip_windows_arm64.exe
          ./rzip_macos_amd64
          ./rzip_macos_arm64
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download binaries
      uses: actions/download-artifact@v2
      with:
        name: binaries
        path: .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v0.3.0-beta-4
        release_name: v0.3.0-beta-4
        body: |
          Release with binaries.
        draft: false
        prerelease: false

    - name: Upload Linux amd64 Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./rzip_linux_amd64
        asset_name: rzip_linux_amd64
        asset_content_type: application/octet-stream

    - name: Upload Linux arm64 Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./rzip_linux_arm64
        asset_name: rzip_linux_arm64
        asset_content_type: application/octet-stream

    - name: Upload Windows amd64 Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./rzip_windows_amd64.exe
        asset_name: rzip_windows_amd64.exe
        asset_content_type: application/octet-stream

    - name: Upload Windows arm64 Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./rzip_windows_arm64.exe
        asset_name: rzip_windows_arm64.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS amd64 Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./rzip_macos_amd64
        asset_name: rzip_macos_amd64
        asset_content_type: application/octet-stream

    - name: Upload macOS arm64 Binary
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./rzip_macos_arm64
        asset_name: rzip_macos_arm64
        asset_content_type: application/octet-stream
